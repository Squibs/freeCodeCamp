Project Notes:

	Reverse a String (reverse-a-string.js):
		I saw two ways of handling this challenge. Either use the array methods I learned just moments before starting these challenges, or using for/while loops to go through each string and retrieve characters and put them back together. In my mind everything seemd it would be much simpler. In summary I took the string, split it into an array by each character, reversed the array, and put the array back into a string using the array methods taught in the object oriented and functional programming lessons. (split(), reverse(), join())

	Factorialize a Number (factorialize-a-number.js):
		The only method of solving this one that I could think of was to use an if statement with a nested for loop. The number would only go through the loop if it was greater than 0. Otherwise it would just add 1 to the argument and return it. I'm not sure if negative numbers can be factorialized or not, and there were no examples or tests that included negative numbers so I saw this as an appropriate way to solve this challenge.

	Check for Palindromes (check-for-palindromes.js):
		At first I felt the need to convert the passed string to an array. But I quickly found myself making things to complicated going down that route. I restarted and tried just modifying the passed string itself and comparing characters with bracket notation. This ended up being my solution. Convert the string to all lowercase and remove any symbols or whitespace with regex. Use a for loop to iterate through the string based on the length of the string. I used bracket notation to select the current character and the length of the string minus one and minus the loop control (i) to select characters from the end of the string to compare to the front of the string.
